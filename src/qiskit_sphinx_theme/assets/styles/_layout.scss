// By default, Furo expands the left and right sidebars when the page width increases, but it
// doesn't increase the entry size. It also keeps the page contents fixed at 46em.
//
// Instead, we always keep the side bars the same size, and we expand the main page
// contents. This is a better use of screen real estate and is more consistent with qiskit.org.
//
// But, we only expand the main contents up to 60em because best practices recommend not having
// prose-heavy sites spread content over too long:
// https://www.mediawiki.org/wiki/Reading/Web/Desktop_Improvements/Features/Limiting_content_width#Goals_and_Motivation
// When the max-width is reached, the right page table of contents will stay in its same position and
// whitespace will be added to the right. That is much simpler for us to implement and avoids the
// sidebar from being split way too far from the page content itself.
//
// The easiest way to achieve this is using flexbox, given that Furo already uses it. We keep
// Furo's default values for `width` and `min-width` for the .sidebar-drawer because it's necessary
// for spacing to work properly.

body {
  // This defaults to 15em in Furo, but we want a little bigger.
  --qiskit-left-sidebar-width: 18em;
}

// Disable Furo making the whole site larger on big screens. This results in `rem` having a
// bigger size, so things like the Qiskit top nav bar getting bigger, which we don't like.
@media (min-width: 97em) {
  html {
    font-size: 100%;
  }
}

.sidebar-drawer {
  flex: 0 0 var(--qiskit-left-sidebar-width);
  width: var(--qiskit-left-sidebar-width);
  min-width: var(--qiskit-left-sidebar-width);

  @media (max-width: 67em) {
    left: calc(var(--qiskit-left-sidebar-width) * -1);
  }
}

.sidebar-container {
  width: var(--qiskit-left-sidebar-width);
}

.content {
  flex: 1 1 46em;
  max-width: 60em;
}

.toc-drawer {
  flex: 0 0 15em;
}
